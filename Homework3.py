# Задание 1
"""
Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление.
Числа запрашивать у пользователя, предусмотреть обработку ситуации деления на ноль.
"""


# Решение 1
def division_1(num_1, num_2):
    try:
        print(num_1 / num_2)

    except ZeroDivisionError:
        print("На ноль делить нельзя")


# Решение 2
def division_2(num_1, num_2):
    if num_2 != 0:
        return num_1 / num_2
    else:
        return 'На ноль делить нельзя'


num_1 = int(input('Введите первое число: '))
num_2 = int(input('Введите второе число: '))

division_1(num_1, num_2)

result = division_2(num_1, num_2)
print(result)

# Задание 2
"""
Реализовать функцию, принимающую несколько параметров, описывающих данные пользователя: 
имя, фамилия, год рождения, город проживания, email, телефон. 
Функция должна принимать параметры как именованные аргументы. 
Реализовать вывод данных о пользователе одной строкой.
"""


def user(name, surname, birth_year, city, email, phone_num):
    return f'имя: {name}, фамилия: {surname}, год рождения:{birth_year}, город проживания:{city}, эл.почта: {email}, ' \
           f'тел.: {phone_num} '


name_enter = input('Введите имя: ')
surname_enter = input('Введите фамилию: ')
birth_year_enter = int(input('Введите год рождения: '))
city_enter = input('Введите город проживания: ')
email_enter = input('Введите эл.почту: ')
phone_enter = input('Введите номер телефон: ')

user_data = user(name=name_enter, surname=surname_enter, birth_year=birth_year_enter, city=city_enter,
                 email=email_enter,
                 phone_num=phone_enter)
print(user_data)

# Задание 3
"""
Реализовать функцию my_func(), которая принимает три позиционных аргумента,
и возвращает сумму наибольших двух аргументов.
"""


def sum_max(*args):
    args_list = []
    for el in args:
        args_list.append(el)

    args_list.remove(min(args_list))

    return sum(args_list)


print(sum_max(1, 3, 5, 6, 7, 45))

# Задание 4
"""
Программа принимает действительное положительное число x и целое отрицательное число y. 
Необходимо выполнить возведение числа x в степень y. 
Задание необходимо реализовать в виде функции my_func(x, y). 
При решении задания необходимо обойтись без встроенной функции возведения числа в степень.
Подсказка: попробуйте решить задачу двумя способами. Первый — возведение в степень с помощью оператора **. 
Второй — более сложная реализация без оператора **, предусматривающая использование цикла.
"""


# решение 1
def my_func_1(x, y):
    return 1 / x ** abs(y)


print(my_func_1(2, -2))


# решение 2
def my_func_2(x, y):
    i = 1
    result = 1 / x
    while i < abs(y):
        result = result * (1 / x)
        i += 1
    return result


print(my_func_2(2, -2))

# Задание 5
"""
Программа запрашивает у пользователя строку чисел, разделенных пробелом. 
При нажатии Enter должна выводиться сумма чисел. 
Пользователь может продолжить ввод чисел, разделенных пробелом и снова нажать Enter. 
Сумма вновь введенных чисел будет добавляться к уже подсчитанной сумме. 
Но если вместо числа вводится специальный символ, выполнение программы завершается. 
Если специальный символ введен после нескольких чисел, то вначале нужно добавить сумму этих чисел 
к полученной ранее сумме и после этого завершить программу.
"""

stop_mark = ''
num_sum = 0
while stop_mark != 'Q':
    user_number = input('Введите числа, разделенные пробелом. Для остановки ввода введите Q: ')
    user_number_list = user_number.split()

    for el in user_number_list:
        if el != 'Q':
            num_sum = num_sum + int(el)
        else:
            stop_mark = 'Q'
            break

    print(num_sum)

# Задание 6
"""
Реализовать функцию int_func(), принимающую слово из маленьких латинских букв и возвращающую его же, 
но с прописной первой буквой. Например, print(int_func(‘text’)) -> Text.
Продолжить работу над заданием. В программу должна попадать строка из слов, 
разделенных пробелом. Каждое слово состоит из латинских букв в нижнем регистре. 
Сделать вывод исходной строки, но каждое слово должно начинаться с заглавной буквы. 
Необходимо использовать написанную ранее функцию int_func().
"""


def int_func(text):
    return str(text).capitalize()


print(int_func('привет'))

user_input = input('Введите слова разделеные пробелом: ').split()
result = []
for el in user_input:
    result.append(int_func(el))

print(' '.join(result))
